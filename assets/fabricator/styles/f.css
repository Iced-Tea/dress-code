@charset "UTF-8";
/**
 * Fabricator styles
 * @author Luke Askew
 * Class selectors are namespaced with "f-"
 */
/*! normalize.css v2.1.3 | MIT License | git.io/normalize */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined in IE 8/9.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/**
 * Correct `inline-block` display not defined in IE 8/9.
 */
audio,
canvas,
video {
  display: inline-block; }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9.
 * Hide the `template` element in IE, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* ==========================================================================
   Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* ==========================================================================
   Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* ==========================================================================
   Typography
   ========================================================================== */
/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Correct font family set oddly in Safari 5 and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em; }

/**
 * Improve readability of pre-formatted text in all browsers.
 */
pre {
  white-space: pre-wrap; }

/**
 * Set consistent quote types.
 */
q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* ==========================================================================
   Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9.
 */
img {
  border: 0; }

/**
 * Correct overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden; }

/* ==========================================================================
   Figures
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 0; }

/* ==========================================================================
   Forms
   ========================================================================== */
/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/* ==========================================================================
   Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

* {
  box-sizing: border-box; }

.dc-h1, .dc-h2, .dc-h3, .dc-h4, .dc-h5, .dc-h6, .dc-hgroup,
.dc-list, .dc-dd,
.dc-p, .dc-figure, .dc-object,
.dc-pre, .dc-table, .dc-fieldset, .dc-hr {
  margin: 0;
  margin-bottom: 2.4rem; }

.dc-html {
  height: 100%;
  font-family: "Ubuntu", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  font-size: 62.5%;
  line-height: 1;
  font-weight: 300; }

.dc-body {
  font-size: 1.4rem;
  line-height: 2.4rem;
  background: #edeced;
  color: #4a4a4a; }

.dc-pre {
  word-wrap: normal; }

::-webkit-selection {
  background-color: #ff8e25;
  color: #fff; }

::-moz-selection {
  background-color: #ff8e25;
  color: #fff; }

::selection {
  background-color: #ff8e25;
  color: #fff; }

.dc-strong {
  font-weight: 500; }

.dc-em {
  font-style: italic; }

.dc-nowrap {
  white-space: nowrap; }

.dc-styleguide .dc-p {
  max-width: 56em; }

.dc-link {
  text-decoration: none;
  color: #26aafe;
  cursor: pointer;
  -webkit-transition: color .1s linear;
          transition: color .1s linear;
  -webkit-tap-highlight-color: transparent; }

.dc-input {
  -webkit-tap-highlight-color: transparent; }

.no-touch .dc-link:hover,
.touch .dc-link:active {
  text-decoration: none;
  color: #1e87cb; }

.no-touch .dc-link--success:hover,
.touch .dc-link--success:active {
  color: #65cb1c; }

.no-touch .dc-link--destroy:hover,
.touch .dc-link--destroy:active {
  color: #ff4a25; }

.dc-link--disabled,
.touch .dc-link--disabled:active,
.no-touch .dc-link--disabled:hover {
  color: #b6b6b6;
  cursor: default; }

.dc-has-tooltip[data-tooltip] {
  position: relative; }
  .dc-has-tooltip[data-tooltip]:before, .dc-has-tooltip[data-tooltip]:after {
    position: absolute;
    content: " ";
    opacity: 0;
    pointer-events: none;
    -webkit-transform: translateY(4px);
        -ms-transform: translateY(4px);
            transform: translateY(4px);
    -webkit-transition: -webkit-transform .3s .5s ease-out, opacity .2s .5s;
            transition: transform .3s .5s ease-out, opacity .2s .5s; }
  .dc-has-tooltip[data-tooltip]:before {
    content: attr(data-tooltip);
    bottom: calc(100% + 12px);
    padding: 0.2rem 0.4rem;
    background: rgba(0, 0, 0, 0.7);
    border-radius: 2px;
    line-height: 2.4rem;
    color: #fff; }
  .dc-has-tooltip[data-tooltip]:after {
    bottom: 100%;
    left: 20%;
    height: 0;
    width: 0;
    border: solid transparent;
    border-color: transparent;
    border-top-color: rgba(0, 0, 0, 0.7);
    border-width: 6px;
    margin-left: -6px; }
  .dc-has-tooltip[data-tooltip]:hover:before, .dc-has-tooltip[data-tooltip]:hover:after {
    opacity: 1;
    -webkit-transform: translateY(0);
        -ms-transform: translateY(0);
            transform: translateY(0); }

.dc-list {
  padding-left: 3rem; }

.dc-list--is-reset {
  padding: 0;
  list-style-type: none; }

.dc-dt {
  font-family: "Ubuntu", "Helvetica Neue", "Helvetica", "Arial", sans-serif; }

.dc-h1,
.dc-h2,
.dc-h3,
.dc-h4,
.dc-h5,
.dc-h6 {
  margin-bottom: 2.4rem;
  font-family: "Ubuntu", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  font-weight: 300;
  color: #4a4a4a; }
  .dc-h1 .dc-small,
  .dc-h2 .dc-small,
  .dc-h3 .dc-small,
  .dc-h4 .dc-small,
  .dc-h5 .dc-small,
  .dc-h6 .dc-small {
    display: block;
    font-family: "Ubuntu", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
    font-size: 60%;
    color: #b6b6b6; }

.dc-h1 {
  font-size: 3.4rem;
  line-height: 4.8rem; }

.dc-h2 {
  font-size: 2.7rem;
  line-height: 3.6rem; }

.dc-h3 {
  font-size: 2.2rem;
  line-height: 3.6rem; }

.dc-h4 {
  font-size: 1.8rem;
  line-height: 2.4rem; }

.dc-text--center {
  text-align: center; }

.dc-text--small {
  font-size: 1.1rem;
  line-height: 1.8; }

.dc-less-important {
  font-size: 1.1rem;
  line-height: 1;
  color: #d1d1d1; }

.dc-text--error {
  display: block;
  margin-top: -2.4rem;
  margin-bottom: 2.4rem;
  font-size: 1.1rem;
  color: #ff4a25; }

.dc-icon {
  display: inline-block;
  vertical-align: middle;
  cursor: pointer;
  -webkit-transform-origin: 50%;
      -ms-transform-origin: 50%;
          transform-origin: 50%; }
  .dc-icon:hover [stroke^='#'] {
    stroke: #186698; }
  .dc-icon:hover [fill^='#'] {
    fill: #186698; }
  .dc-icon:active {
    -webkit-transform: scale(0.85);
        -ms-transform: scale(0.85);
            transform: scale(0.85); }

.dc-icon--destroy:hover [stroke^='#'] {
  stroke: #ff4a25; }

.dc-icon--destroy:hover [fill^='#'] {
  fill: #ff4a25; }

.dc-body::before {
  content: "Tiny —0-320px";
  display: block;
  position: fixed;
  right: 0;
  top: 100%;
  left: 0;
  z-index: 910;
  height: 2.4rem;
  background: #ff937b;
  font-weight: 500;
  text-align: center;
  -webkit-transition: -webkit-transform .2s ease-out, opacity .2s;
          transition: transform .2s ease-out, opacity .2s;
  -webkit-transform: translateY(100%);
      -ms-transform: translateY(100%);
          transform: translateY(100%);
  opacity: 0; }

@media (min-width: 20em) {
  .dc-body::before {
    content: "Small —320-480px";
    display: block;
    position: fixed;
    right: 0;
    top: 100%;
    left: 0;
    z-index: 910;
    height: 2.4rem;
    background: #ffbc7a;
    font-weight: 500;
    text-align: center;
    -webkit-transition: -webkit-transform .2s ease-out, opacity .2s;
            transition: transform .2s ease-out, opacity .2s;
    -webkit-transform: translateY(100%);
        -ms-transform: translateY(100%);
            transform: translateY(100%);
    opacity: 0; } }

@media (min-width: 30em) {
  .dc-body::before {
    content: "Medium —480-600px";
    display: block;
    position: fixed;
    right: 0;
    top: 100%;
    left: 0;
    z-index: 910;
    height: 2.4rem;
    background: #ffef6a;
    font-weight: 500;
    text-align: center;
    -webkit-transition: -webkit-transform .2s ease-out, opacity .2s;
            transition: transform .2s ease-out, opacity .2s;
    -webkit-transform: translateY(100%);
        -ms-transform: translateY(100%);
            transform: translateY(100%);
    opacity: 0; } }

@media (min-width: 37.5em) {
  .dc-body::before {
    content: "Large —600-1024px";
    display: block;
    position: fixed;
    right: 0;
    top: 100%;
    left: 0;
    z-index: 910;
    height: 2.4rem;
    background: #b4ff70;
    font-weight: 500;
    text-align: center;
    -webkit-transition: -webkit-transform .2s ease-out, opacity .2s;
            transition: transform .2s ease-out, opacity .2s;
    -webkit-transform: translateY(100%);
        -ms-transform: translateY(100%);
            transform: translateY(100%);
    opacity: 0; } }

@media (min-width: 64em) {
  .dc-body::before {
    content: "Huge —1024-1280px";
    display: block;
    position: fixed;
    right: 0;
    top: 100%;
    left: 0;
    z-index: 910;
    height: 2.4rem;
    background: #8decff;
    font-weight: 500;
    text-align: center;
    -webkit-transition: -webkit-transform .2s ease-out, opacity .2s;
            transition: transform .2s ease-out, opacity .2s;
    -webkit-transform: translateY(100%);
        -ms-transform: translateY(100%);
            transform: translateY(100%);
    opacity: 0; } }

@media (min-width: 80em) {
  .dc-body::before {
    content: "Giant —1280-1600px";
    display: block;
    position: fixed;
    right: 0;
    top: 100%;
    left: 0;
    z-index: 910;
    height: 2.4rem;
    background: #88ccfe;
    font-weight: 500;
    text-align: center;
    -webkit-transition: -webkit-transform .2s ease-out, opacity .2s;
            transition: transform .2s ease-out, opacity .2s;
    -webkit-transform: translateY(100%);
        -ms-transform: translateY(100%);
            transform: translateY(100%);
    opacity: 0; } }

@media (min-width: 100em) {
  .dc-body::before {
    content: "Monstrous —1600px and up";
    display: block;
    position: fixed;
    right: 0;
    top: 100%;
    left: 0;
    z-index: 910;
    height: 2.4rem;
    background: #c19cfe;
    font-weight: 500;
    text-align: center;
    -webkit-transition: -webkit-transform .2s ease-out, opacity .2s;
            transition: transform .2s ease-out, opacity .2s;
    -webkit-transform: translateY(100%);
        -ms-transform: translateY(100%);
            transform: translateY(100%);
    opacity: 0; } }

.dc-is-show-breakpoints .dc-body::before {
  -webkit-transform: translateY(-100%);
      -ms-transform: translateY(-100%);
          transform: translateY(-100%);
  opacity: 1; }

.dc-is-show-grid .dc-grid {
  position: fixed;
  top: 4.4rem;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 909;
  opacity: .5;
  pointer-events: none;
  max-width: calc(100% - 16px);
  margin-left: auto;
  margin-right: auto;
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 90.90909%, transparent 90.90909%);
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 90.90909%, transparent 90.90909%);
  background-size: 52.38095%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top; }
  .dc-is-show-grid .dc-grid:after {
    content: " ";
    display: block;
    clear: both; }
  @media (min-width: 20em) {
    .dc-is-show-grid .dc-grid {
      max-width: calc(100% - 24px);
      margin-left: auto;
      margin-right: auto;
      background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 80%, transparent 80%);
      background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 80%, transparent 80%);
      background-size: 26.31579%;
      background-origin: content-box;
      background-clip: content-box;
      background-position: left top; }
      .dc-is-show-grid .dc-grid:after {
        content: " ";
        display: block;
        clear: both; } }
  @media (min-width: 30em) {
    .dc-is-show-grid .dc-grid {
      max-width: calc(100% - 24px);
      margin-left: auto;
      margin-right: auto;
      background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 80%, transparent 80%);
      background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 80%, transparent 80%);
      background-size: 17.24138%;
      background-origin: content-box;
      background-clip: content-box;
      background-position: left top; }
      .dc-is-show-grid .dc-grid:after {
        content: " ";
        display: block;
        clear: both; } }
  @media (min-width: 37.5em) {
    .dc-is-show-grid .dc-grid {
      max-width: calc(100% - 48px);
      margin-left: auto;
      margin-right: auto;
      background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 80%, transparent 80%);
      background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 80%, transparent 80%);
      background-size: 12.82051%;
      background-origin: content-box;
      background-clip: content-box;
      background-position: left top; }
      .dc-is-show-grid .dc-grid:after {
        content: " ";
        display: block;
        clear: both; } }
  @media (min-width: 64em) {
    .dc-is-show-grid .dc-grid {
      max-width: calc(100% - 48px);
      margin-left: auto;
      margin-right: auto;
      background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 80%, transparent 80%);
      background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 80%, transparent 80%);
      background-size: 8.47458%;
      background-origin: content-box;
      background-clip: content-box;
      background-position: left top; }
      .dc-is-show-grid .dc-grid:after {
        content: " ";
        display: block;
        clear: both; } }
  @media (min-width: 80em) {
    .dc-is-show-grid .dc-grid {
      max-width: calc(100% - 48px);
      margin-left: auto;
      margin-right: auto;
      background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 80%, transparent 80%);
      background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 80%, transparent 80%);
      background-size: 6.32911%;
      background-origin: content-box;
      background-clip: content-box;
      background-position: left top; }
      .dc-is-show-grid .dc-grid:after {
        content: " ";
        display: block;
        clear: both; } }
  @media (min-width: 100em) {
    .dc-is-show-grid .dc-grid {
      max-width: calc(100% - 96px);
      margin-left: auto;
      margin-right: auto;
      background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 80%, transparent 80%);
      background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 80%, transparent 80%);
      background-size: 5.05051%;
      background-origin: content-box;
      background-clip: content-box;
      background-position: left top; }
      .dc-is-show-grid .dc-grid:after {
        content: " ";
        display: block;
        clear: both; } }

.sg-icon {
  display: inline-block;
  margin-bottom: 2.7rem;
  padding: 1.2rem;
  background-color: #fff;
  border: 1px solid #d1d1d1;
  text-align: center; }
  .sg-icon svg {
    margin-bottom: 1.1rem;
    vertical-align: middle; }
  .sg-icon .i--interactive:hover [fill^='#'] {
    fill: #1e87cb; }
  .sg-icon .i--interactive:hover [stroke^='#'] {
    stroke: #1e87cb; }
  .sg-icon .i--interactive:active {
    -webkit-transform: scale(0.85);
        -ms-transform: scale(0.85);
            transform: scale(0.85);
    shape-rendering: optimizeSpeed;
    -webkit-tap-highlight-color: transparent; }
  .sg-icon .i--portal:hover [fill^='#'] {
    fill: #ff8e25; }
  .sg-icon .i--portal:hover [stroke^='#'] {
    stroke: #ff8e25; }

.sg-section {
  padding-top: 7.2rem;
  margin-bottom: 7.2rem; }
  @media (min-width: huge-width) {
    .sg-section {
      padding-top: 4.8rem; } }

.sg-section__title {
  font-weight: 500;
  text-transform: uppercase; }

.sg-section__sub-title {
  margin-top: 7.2rem;
  text-transform: uppercase;
  color: #b6b6b6;
  border-bottom: 1px solid #d1d1d1; }
  .sg-section__title + .sg-section__sub-title {
    margin-top: 4.8rem; }

.sg-section__sub-section {
  margin-bottom: 1.2rem; }

/**
 * Github-like theme for Prism.js
 * @author Luke Askew http://github.com/lukeaskew
 */
code,
code[class*='language-'],
pre[class*='language-'] {
  color: #4a4a4a;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  -moz-tab-size: 4;
    -o-tab-size: 4;
       tab-size: 4;
  -webkit-hyphens: none;
     -moz-hyphens: none;
      -ms-hyphens: none;
          hyphens: none;
  font-family: 'Ubuntu Mono', Menlo, Courier, monospace;
  line-height: 1.4;
  direction: ltr;
  cursor: text;
  letter-spacing: normal; }

pre[class*='language-'] {
  overflow: auto;
  margin: 0 0 2.4rem;
  padding: 1.2rem;
  border-radius: 2px; }

p code,
li code,
table code {
  margin: 0;
  border-radius: 3px;
  padding: 0.2em 0; }
  p code:before, p code:after,
  li code:before,
  li code:after,
  table code:before,
  table code:after {
    letter-spacing: -0.2em;
    content: '\00a0'; }

code,
:not(pre) > code[class*='language-'],
pre[class*='language-'] {
  background: #fff; }

:not(pre) > code[class*='language-'] {
  padding: 0.1em;
  border-radius: 0.3em; }

.token.comment, .token.prolog, .token.doctype, .token.cdata {
  color: #807f80; }

.token.punctuation, .token.string, .token.atrule {
  color: #807f80; }

.token.attr-value {
  color: #ff8e25; }

.token.property, .token.tag {
  color: #26aafe; }

.token.boolean, .token.number {
  color: #24e0fe; }

.token.selector, .token.attr-name,
.token.attr-value .punctuation:first-child, .token.keyword, .token.regex, .token.important {
  color: #9757fd; }

.token.operator, .token.entity, .token.url,
.language-css .token.string {
  color: #9757fd; }

.token.entity {
  cursor: help; }

.namespace {
  opacity: 0.7; }

.f-color-chips {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }

.f-color-chip {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  -webkit-flex-shrink: 0;
      -ms-flex-negative: 0;
          flex-shrink: 0;
  -webkit-flex-basis: 100%;
      -ms-flex-preferred-size: 100%;
          flex-basis: 100%;
  border-top-width: 8em;
  border-top-style: solid;
  border-bottom-width: 0;
  border-bottom-style: solid;
  background-color: #fff;
  font-size: 1.4rem;
  font-weight: 500;
  padding: 1em;
  margin-bottom: 2em; }
  @media (min-width: 60em) {
    .f-color-chip {
      -webkit-flex-basis: 13em;
          -ms-flex-preferred-size: 13em;
              flex-basis: 13em; } }
  .f-color-chip .f-color-chip__color {
    background-color: #fff;
    content: attr(data-color);
    font-weight: 300;
    color: #9b9b9b; }

.f-controls {
  box-sizing: border-box;
  margin-bottom: 1.6rem;
  border-bottom: 1px solid #edeced; }
  .f-controls:after {
    clear: both; }
  .f-controls:before, .f-controls:after {
    display: table;
    content: ' '; }
  .f-controls .f-control {
    display: block;
    float: left;
    text-align: center;
    width: 33.33333%;
    margin: 0;
    padding: 1rem 0; }
    .f-controls .f-control.f-active {
      box-shadow: inset 0 -3px 0 0 #ff8e25; }
      .f-controls .f-control.f-active use {
        fill: #ff8e25; }
      .f-controls .f-control.f-active:hover use {
        fill: #f17400; }
    .f-controls .f-control svg {
      vertical-align: middle; }
      .f-controls .f-control svg use {
        fill: #9b9b9b; }
      .f-controls .f-control svg:hover use {
        fill: #f17400; }

.f-control {
  box-sizing: border-box;
  display: inline-block;
  cursor: pointer;
  margin-left: 2.4rem; }
  .f-control:first-child {
    margin-left: 0; }
  .f-control svg {
    width: 1.6rem;
    height: 1.6rem; }
    .f-control svg use {
      fill: #cccccc; }
    .f-control svg:active {
      -webkit-transform: scale(0.85);
          -ms-transform: scale(0.85);
              transform: scale(0.85); }

.f-control-bar {
  padding: 1rem 0; }
  .f-control-bar:after {
    clear: both; }
  .f-control-bar:before, .f-control-bar:after {
    display: table;
    content: ' '; }

.f-menu-toggle {
  cursor: pointer;
  vertical-align: middle; }
  .f-menu-toggle svg {
    display: block;
    float: left;
    margin-bottom: -1px; }
    .f-menu-toggle svg use {
      fill: #9b9b9b; }
    .f-menu-toggle svg:hover use {
      fill: #f17400; }

.f-item-group {
  margin-bottom: 3rem;
  padding-bottom: 3rem;
  border-bottom: 1px solid #cccccc; }
  .f-item-group:after {
    clear: both; }
  .f-item-group:before, .f-item-group:after {
    display: table;
    content: ' '; }
  .f-item-group:last-child {
    border-bottom: 0;
    margin-bottom: 0; }
  .f-item-group ~ .f-item-group {
    margin-top: 0; }
  .f-item-group > .f-item-group {
    padding-bottom: 1.5rem;
    margin-bottom: 1.5rem;
    border-bottom: 0; }
    .f-item-group > .f-item-group:first-of-type {
      margin-top: 0; }
    .f-item-group > .f-item-group:last-child {
      margin-bottom: 0;
      padding-bottom: 0; }

.f-item-preview:after {
  clear: both; }

.f-item-preview:before, .f-item-preview:after {
  display: table;
  content: ' '; }

.f-item-border-bottom {
  border-bottom: 1px solid #cccccc; }

.f-item-heading-group {
  vertical-align: middle; }
  .f-item-heading-group:after {
    clear: both; }
  .f-item-heading-group:before, .f-item-heading-group:after {
    display: table;
    content: ' '; }

h2.f-item-heading {
  font-weight: 500;
  text-transform: uppercase; }

h3.f-item-heading {
  text-transform: uppercase;
  color: #9b9b9b;
  border-bottom: 1px solid #d1d1d1; }
  .sg-section__title + h3.f-item-heading {
    margin-top: 4.8rem; }

.f-item-controls {
  float: right;
  display: inline-block;
  vertical-align: middle;
  margin-left: 0.5rem; }
  .f-item-controls .f-control {
    width: 36px;
    height: 36px;
    display: block;
    float: left; }
    .f-item-controls .f-control use {
      fill: #26aafe; }
    .f-item-controls .f-control:hover use {
      fill: #0174bd; }
    .f-item-controls .f-control svg {
      width: 22px;
      height: 22px; }
      .f-item-controls .f-control svg:active {
        -webkit-transform: scale(0.85);
            -ms-transform: scale(0.85);
                transform: scale(0.85); }

.f-item-hidden {
  display: none; }

.f-item-notes {
  margin-bottom: 2.4rem;
  font-size: 1.4rem;
  color: #646464; }
  .f-item-notes > * {
    margin-bottom: 0; }
    .f-item-notes > *:before {
      content: "//";
      margin-right: 0.8rem; }

html {
  height: 100%; }
  html.f-menu-active {
    overflow: hidden; }

body {
  margin: 0;
  position: relative; }
  .f-menu-active body {
    width: 100%;
    height: 100%; }

.f-container {
  box-sizing: border-box;
  position: relative;
  margin-top: 4.4rem;
  padding: 1.2rem;
  z-index: 0;
  min-height: calc(100vh - 4.4rem);
  -webkit-transition: -webkit-transform .2s ease-out, padding .2s ease-out;
          transition: transform .2s ease-out, padding .2s ease-out; }
  .f-container:after {
    clear: both; }
  .f-container:before, .f-container:after {
    display: table;
    content: ' '; }
  .f-menu-active .f-container {
    -webkit-transform: translate(calc(44.44444% + 0.8rem + 5.26316%), 0);
        -ms-transform: translate(calc(44.44444% + 0.8rem + 5.26316%), 0);
            transform: translate(calc(44.44444% + 0.8rem + 5.26316%), 0);
    padding-left: 0; }
    @media (min-width: 20em) {
      .f-menu-active .f-container {
        -webkit-transform: translate(calc(47.36842% + 5.26316%), 0);
            -ms-transform: translate(calc(47.36842% + 5.26316%), 0);
                transform: translate(calc(47.36842% + 5.26316%), 0); } }
    @media (min-width: 30em) {
      .f-menu-active .f-container {
        -webkit-transform: translate(calc(31.03448% + 0.8rem + 3.44828%), 0);
            -ms-transform: translate(calc(31.03448% + 0.8rem + 3.44828%), 0);
                transform: translate(calc(31.03448% + 0.8rem + 3.44828%), 0); } }
    @media (min-width: 37.5em) {
      .f-menu-active .f-container {
        -webkit-transform: translate(calc(23.07692% + 1.2rem + 2.5641%), 0);
            -ms-transform: translate(calc(23.07692% + 1.2rem + 2.5641%), 0);
                transform: translate(calc(23.07692% + 1.2rem + 2.5641%), 0); } }
    @media (min-width: 64em) {
      .f-menu-active .f-container {
        margin-left: calc(15.25424% + 1.2rem + 1.69492%);
        padding: 2.4rem 2.4rem 0 0;
        height: calc(100vh - 4.4rem);
        overflow-y: scroll;
        -webkit-overflow-scrolling: touch;
        -webkit-transform: translate(0, 0);
            -ms-transform: translate(0, 0);
                transform: translate(0, 0); } }
    @media (min-width: 80em) {
      .f-menu-active .f-container {
        margin-left: calc(11.39241% + 2.4rem + 1.26582%);
        padding: 2.4rem 3.6rem 0 0; } }
    @media (min-width: 100em) {
      .f-menu-active .f-container {
        margin-left: calc(9.09091% + 3.6rem + 1.0101%);
        padding: 2.4rem 4.8rem 0 0; } }
  @media (min-width: 37.5em) {
    .f-container {
      padding: 1.2rem 2.4rem; } }
  @media (min-width: 100em) {
    .f-container {
      padding: 1.2rem 4.8rem; } }

.f-menu {
  box-sizing: border-box;
  position: fixed;
  top: 4.4rem;
  left: 0;
  z-index: 1;
  width: calc(44.44444% + 0.8rem);
  height: 100%;
  padding-bottom: 4.4rem;
  background-color: white;
  border-right: 1px solid #d1d1d1;
  overflow-x: hidden;
  overflow-y: scroll;
  -webkit-transition: -webkit-transform .2s ease-out;
          transition: transform .2s ease-out;
  -webkit-transform: translate(-100%, 0);
      -ms-transform: translate(-100%, 0);
          transform: translate(-100%, 0);
  -webkit-overflow-scrolling: touch; }
  @media (min-width: 20em) {
    .f-menu {
      width: 47.36842%; } }
  @media (min-width: 30em) {
    .f-menu {
      width: calc(31.03448% + 0.8rem); } }
  @media (min-width: 37.5em) {
    .f-menu {
      width: calc(23.07692% + 1.2rem); } }
  @media (min-width: 64em) {
    .f-menu {
      width: calc(15.25424% + 1.2rem); } }
  @media (min-width: 80em) {
    .f-menu {
      width: calc(11.39241% + 2.4rem); } }
  @media (min-width: 100em) {
    .f-menu {
      width: calc(9.09091% + 3.6rem); } }
  .f-menu-active .f-menu {
    -webkit-transform: translate(0, 0);
        -ms-transform: translate(0, 0);
            transform: translate(0, 0); }
  .f-menu ul {
    margin-top: 0;
    margin-bottom: 0;
    padding-left: 0; }
  .f-menu > ul {
    margin-top: 0;
    margin-bottom: 2.4rem; }
    .f-menu > ul > li {
      margin-bottom: 1.6rem;
      padding-bottom: 1.6rem;
      border-bottom: 1px solid #edeced; }
  .f-menu li {
    list-style-type: none;
    margin-top: 0;
    margin-bottom: 0; }
  .f-menu a {
    display: block;
    padding: 0.4rem 1.6rem;
    color: #646464;
    text-decoration: none;
    font-size: 1.4rem;
    line-height: 1.2; }
    .f-menu a:hover {
      color: #ff8e25; }
    .f-menu a.f-active {
      box-shadow: inset 3px 0 0 0 #ff8e25; }
  .f-menu .f-menu__heading {
    padding-left: 1.5rem;
    font-weight: 500;
    font-size: 1.4rem;
    text-transform: uppercase; }
    .f-menu .f-menu__heading:hover {
      color: #757575; }

.touch .f-menu a:active,
.no-touch .f-menu a:hover {
  background-color: #fff1e3;
  color: #ff8e25; }

/*# sourceMappingURL=data:application/json;base64, */
