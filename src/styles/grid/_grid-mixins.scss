@mixin dc-grid-row ($gutter: $dc-grid-gutter) {
    @if type-of($gutter) == "map" {
        @each $br, $value in $gutter {
            $padding: -($value / 2);

            @include breakpoint(map-get($dc-grid-breakpoints, $br)) {
                margin-right: $padding;
                margin-left: $padding;
            }
        }
    }
}

@mixin dc-grid-column (
    $columns: null,
    $gutter: $dc-grid-gutter
) {
    flex: grid-column-flex($columns);
    // Gutters
    @if type-of($gutter) == "map" {
        @each $br, $value in $gutter {
            $padding: ($value / 2);

            @include breakpoint(map-get($dc-grid-breakpoints, $br)) {
                padding-right: $padding;
                padding-left: $padding;
            }
        }
    }
}

@function grid-column-flex($columns: null) {
    $flex: 1 1 0;

    @if $columns != null {
        $flex: 0 0 grid-column-size($columns);
    }

    @return $flex;
}

@function grid-column-size($columns: null) {
    $width: 0;

    @if type-of($columns) == "number" {
        @if $columns < 1 {
            $width: percentage($columns);
        } @else {
            $width: percentage($columns / $dc-grid-column-count);
        }
    } @else {
        @error 'Wrong syntax for columns. It must be a number (of columns)';
    }

    @return $width;
}
